package torreparqueadero;


import static java.lang.Thread.sleep;
import java.util.logging.Level;
import java.util.logging.Logger;

//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : TorreParqueadero
//  @ File Name : RelojInterno.java
//  @ Date : 04/2013
//  @ Author : Luis M Ponce de leon
//
//


/** 
 * Clase encargada del mantenimiento y avance del tiempo dentro del sistema.
 * 
 * @author luismiguel
 */
public class RelojInterno extends Thread{
    /** Las hora que marca el reloj, sin minutos. Toma valoress enteros entre
     * 0 y 24.
     * 
     */
    private int horas = 0;
    
    /** Los minutos de la hora en que esta el reloj. Toma valores enteros entre 
     * 0 y 59.
     * 
     */
    private int minutos = 0;
    
    /**
     * Unica instancia de la clase.
     */
    private static RelojInterno INSTANCE = new RelojInterno();
    
    /**
     * Constructor privado de la clase para evitar la creacion de mas de una 
     * instancia de esta.
     */
    private RelojInterno(){}
    
    /**
     * Geter de la unica instancia de la clase.
     * 
     * @return La unica instancia de la clase.
     */
    public static RelojInterno GetInstance(){
        return INSTANCE;
    }
    
    @Override
    public void run() {
        while(true){
            try {
                sleep(60000);
                this.AdelantarTiempo(0, 1);
            } catch (InterruptedException ex) {
                Logger.getLogger(RelojInterno.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    /** Geter de la hora actual generada por el reloj interno.
     * 
     * @return La hora actual del sistema.
     */
    public HoraDelDia GetHoraActual (){
        HoraDelDia horaActual = new HoraDelDia(this.horas, this.minutos);
        return horaActual;
    }

    /**
     * @param horas
     * @param minutos  
     */
    public void AdelantarTiempo(int horas, int minutos) {
        this.minutos+=minutos;
        this.horas+=horas;
        
        if (this.minutos>=60){
            this.horas+= this.minutos/60;
            this.minutos= this.minutos%60;
        }
        if (this.horas>=24){
            //iniciar limpieza!!
            this.horas= this.horas%24;
        }
        
        //debug to test the pass of time
        System.out.println(this.horas + ":" + this.minutos);
    }
}
